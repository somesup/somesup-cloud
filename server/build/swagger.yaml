openapi: 3.0.3
info:
  title: Somesup API Documentation
  version: 1.0.0
  description: |
    썸즈업 API 문서입니다.
servers:
  - url: /api
paths:
  /auth/phone/request:
    post:
      summary: 휴대폰 번호 인증 요청
      description: 사용자가 입력한 'phoneNumber'로 인증코드를 전송합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneRequest'
      responses:
        '200':
          description: 인증코드 전송 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              examples:
                success:
                  summary: 인증코드 전송 성공
                  value:
                    success: true
                    data: null
                    message: Verification code sent successfully
        '400':
          description: 잘못된 요청 (phoneNumber 미입력)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidPhoneNumber:
                  summary: 잘못된 휴대폰 번호
                  value:
                    success: false
                    message: Phone number is required
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: 서버 오류
                  value:
                    success: false
                    message: Internal server error
  /auth/phone/verify:
    post:
      summary: 휴대폰 인증 코드 검증 및 회원 가입/로그인
      description: |
        인증코드가 맞으면 사용자 정보 및 JWT 토큰 발급. 신규 사용자는 회원가입 후 발급됨.
        새로운 사용자는 랜덤 닉네임이 생성되어 회원가입되고, 이후 사용자는 닉네임을 변경할 수 있음.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneVerifyRequest'
      responses:
        '200':
          description: '인증 성공, 사용자 정보 및 액세스/리프레시 토큰 반환'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneVerifySuccessResponse'
        '400':
          description: 잘못된 요청 (파라미터 누락)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                missingParameters:
                  summary: 파라미터 누락
                  value:
                    success: false
                    message: Phone number and code are required
        '401':
          description: 인증 실패 (인증 코드 불일치)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidCode:
                  summary: 잘못된 인증 코드
                  value:
                    success: false
                    message: Invalid verification code
        '404':
          description: 해당 전화번호의 인증 코드가 만료되었거나 존재하지 않음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                codeNotFound:
                  summary: 인증 코드 없음
                  value:
                    success: false
                    message: Verification code does not exist or has expired
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: 서버 오류
                  value:
                    success: false
                    message: Internal server error
  /auth/refresh:
    post:
      summary: 액세스 토큰 갱신
      description: 유효한 리프레시 토큰을 이용해 새 액세스/리프레시 토큰을 발급합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: 토큰 갱신 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: 잘못된 요청 (refreshToken 미입력)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                missingRefreshToken:
                  summary: 리프레시 토큰 누락
                  value:
                    success: false
                    message: Refresh token is required
        '401':
          description: 리프레시 토큰이 유효하지 않거나 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidRefreshToken:
                  summary: 유효하지 않은 리프레시 토큰
                  value:
                    success: false
                    message: Invalid refresh token
                refreshTokenNotFound:
                  summary: 리프레시 토큰을 찾을 수 없음
                  value:
                    success: false
                    message: Refresh token not found for the user
        '404':
          description: 사용자 정보 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                userNotFound:
                  summary: 사용자 정보 없음
                  value:
                    success: false
                    message: User not found
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: 서버 오류
                  value:
                    success: false
                    message: Internal server error
  /articles:
    get:
      summary: 기사 목록 조회 (Cursor 기반 페이지네이션)
      description: limit 및 cursor 쿼리 파라미터를 이용해 기사를 조회합니다.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: 한 번에 조회할 기사 개수 (기본값 10)
        - in: query
          name: cursor
          schema:
            type: string
          description: 커서 값 (이후 페이지 조회 시 사용)
      responses:
        '200':
          description: 기사 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleCursorPaginationResponse'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: 서버 오류
                  value:
                    success: false
                    message: Internal server error
  '/articles/{id}':
    get:
      summary: 특정 기사 조회
      description: ID로 특정 기사를 조회합니다.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 기사 ID
      responses:
        '200':
          description: 기사 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleResponse'
        '404':
          description: 기사 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                articleNotFound:
                  summary: 기사를 찾을 수 없음
                  value:
                    success: false
                    message: Article not found
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: 서버 오류
                  value:
                    success: false
                    message: Internal server error
  /users:
    patch:
      summary: 사용자 정보 업데이트
      description: 사용자의 정보를 업데이트 합니다. 현재는 닉네임만 업데이트 가능합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInfoRequest'
      responses:
        '200':
          description: 사용자 정보 업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              examples:
                success:
                  summary: 사용자 정보 업데이트 성공
                  value:
                    success: true
                    data: '#/components/schemas/User'
                    message: User information updated successfully
        '400':
          description: 잘못된 요청 (허용되지 않은 필드 포함 등)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidRequest:
                  summary: 잘못된 요청
                  value:
                    success: false
                    message: 'Invalid request, possibly due to unsupported fields'
        '401':
          description: 인증 실패 (토큰이 없거나 유효하지 않음)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  summary: 인증 실패
                  value:
                    success: false
                    message: User ID is required
        '404':
          description: 사용자 정보 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                userNotFound:
                  summary: 사용자 정보 없음
                  value:
                    success: false
                    message: User not found
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: 서버 오류
                  value:
                    success: false
                    message: Internal server error
  /users/section-preferences:
    patch:
      summary: 사용자 섹션 선호도 업데이트
      description: 사용자의 섹션 선호도를 업데이트합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSectionPreferences'
      responses:
        '200':
          description: 사용자 섹션 선호도 업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSectionPreferencesResponse'
        '400':
          description: 잘못된 요청 (필드 타입 오류 등)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidRequest:
                  summary: 잘못된 요청
                  value:
                    success: false
                    message: 'Invalid request body, please check body format'
        '401':
          description: 인증 실패 (토큰이 없거나 유효하지 않음)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  summary: 인증 실패
                  value:
                    success: false
                    message: User ID is required
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: 서버 오류
                  value:
                    success: false
                    message: Internal server error
  /sections:
    get:
      summary: 섹션 목록 조회
      description: 등록된 섹션 목록을 조회합니다.
      responses:
        '200':
          description: 섹션 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponse'
              examples:
                success:
                  summary: 섹션 목록 조회 성공
                  value:
                    success: true
                    data:
                      - id: 1
                        name: politics
                      - id: 2
                        name: economy
                    message: Sections retrieved successfully
        '404':
          description: 섹션 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                sectionNotFound:
                  summary: 섹션을 찾을 수 없음
                  value:
                    success: false
                    message: Sections not found
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: 서버 오류
                  value:
                    success: false
                    message: Internal server error
  '/sections/{id}':
    get:
      summary: 특정 섹션 조회
      description: ID로 특정 섹션을 조회합니다.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 섹션 ID
      responses:
        '200':
          description: 섹션 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponse'
              examples:
                success:
                  summary: 섹션 조회 성공
                  value:
                    success: true
                    data:
                      id: 1
                      name: politics
                    message: Section retrieved successfully
        '404':
          description: 섹션 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                sectionNotFound:
                  summary: 섹션을 찾을 수 없음
                  value:
                    success: false
                    message: Section not found
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: 서버 오류
                  value:
                    success: false
                    message: Internal server error
components:
  schemas:
    PhoneRequest:
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          type: string
          description: 휴대폰 번호
          example: 01012345678
    PhoneVerifyRequest:
      type: object
      required:
        - phoneNumber
        - code
      properties:
        phoneNumber:
          type: string
          description: 휴대폰 번호
          example: 01012345678
        code:
          type: string
          description: 인증 코드
          example: '123456'
    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          description: 리프레시 토큰
          example: your_refresh_token_here
    UpdateUserInfoRequest:
      type: object
      properties:
        nickname:
          type: string
          description: 사용자 닉네임
          example: 새로운 닉네임
    PhoneVerifySuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            tokens:
              $ref: '#/components/schemas/Tokens'
        message:
          type: string
          example: Phone verification successful
    TokenResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/Tokens'
        message:
          type: string
          example: Access token refreshed successfully
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: 'null'
          nullable: true
          example: null
        message:
          type: string
          example: Verification code sent successfully
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Internal server error
        code:
          type: string
          nullable: true
        details:
          type: string
          nullable: true
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        phone:
          type: string
          example: 1012345678
        nickname:
          type: string
          example: 슈퍼파워알파
    Tokens:
      type: object
      properties:
        accessToken:
          type: string
          example: <access_token>
        refreshToken:
          type: string
          example: <refresh_token>
    Article:
      type: object
      properties:
        id:
          type: integer
          example: 1
        provider_id:
          type: integer
          example: 2
        processed_id:
          type: integer
          nullable: true
          example: 10
        title:
          type: string
          example: Example Article Title
        content:
          type: string
          example: 기사 본문 내용입니다.
        language:
          type: string
          example: ko
        region:
          type: string
          nullable: true
          example: Seoul
        section:
          type: string
          nullable: true
          example: politics
        thumbnail_url:
          type: string
          example: 'https://example.com/image.jpg'
        news_url:
          type: string
          example: 'https://news.example.com/article/1'
        is_processed:
          type: boolean
          example: false
        created_at:
          type: string
          format: date-time
          example: '2023-09-21T12:00:00.000Z'
    ArticleCursorPaginationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Article'
        pagination:
          type: object
          properties:
            type:
              type: string
              enum:
                - cursor
              example: cursor
            hasNext:
              type: boolean
              example: true
            hasPrev:
              type: boolean
              nullable: true
              example: false
            nextCursor:
              type: string
              nullable: true
              example: eyJjcmVhdGVkQXQiOiIyMDIzLTA5LTIxVDEyOjAwOjAwLjAwMFoiLCJpZCI6Mn0=
            prevCursor:
              type: string
              nullable: true
              example: null
    ArticleResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/Article'
        message:
          type: string
          example: Article retrieved successfully
    Section:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: politics
    SectionResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/Section'
        message:
          type: string
          example: Section retrieved successfully
    UserSectionPreferences:
      type: object
      properties:
        userId:
          type: integer
          example: 1
        sectionId:
          type: integer
          example: 2
        preferences:
          type: integer
          example: 2
    UserSectionPreferencesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserSectionPreferences'
        message:
          type: string
          example: User section preferences updated successfully
